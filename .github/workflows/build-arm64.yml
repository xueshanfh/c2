name: Build JNI ARM64 FastIO (Direct JNI for LuaJ)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-jni-arm64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU for ARM64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create JNI Build Dockerfile
      run: |
        cat > Dockerfile.jni << 'EOF'
        FROM arm64v8/alpine:3.18
        
        RUN apk add --no-cache build-base musl-dev file openjdk11-jdk
        
        WORKDIR /build
        COPY fastio_jni.c .
        
        # Get JNI headers
        RUN find /usr/lib/jvm -name "jni.h" -exec dirname {} \; | head -1 > jni_path.txt
        RUN JNI_PATH=$(cat jni_path.txt) && \
            echo "Found JNI headers at: $JNI_PATH" && \
            gcc -O3 -fPIC -Wall -Wextra -std=c99 \
            -march=armv8-a -mtune=cortex-a72 \
            -DNDEBUG -fstack-protector \
            -I"$JNI_PATH" -I"$JNI_PATH/linux" \
            -c fastio_jni.c -o fastio.o
        
        # Create JNI shared library
        RUN gcc -shared -fPIC \
            -Wl,-soname,fastio.so \
            -o fastio.so fastio.o
        
        # Verify JNI build
        RUN echo "=== JNI ARM64 FastIO ===" && \
            file fastio.so && \
            ls -la fastio.so && \
            echo "=== JNI Symbols ===" && \
            nm -D fastio.so | grep Java || echo "JNI symbols may be present"
        
        CMD ["tail", "-f", "/dev/null"]
        EOF
    
    - name: Build JNI ARM64 FastIO
      run: |
        docker buildx build --platform linux/arm64 \
          -f Dockerfile.jni \
          -t fastio-jni-arm64:latest \
          --load \
          .
        
        mkdir -p output
        
        docker run --rm --platform linux/arm64 \
          -v $PWD/output:/output \
          fastio-jni-arm64:latest \
          cp /build/fastio.so /output/
        
        echo "=== JNI Build Results ==="
        ls -la output/
        file output/fastio.so
    
    - name: Upload JNI ARM64 binary
      uses: actions/upload-artifact@v4
      with:
        name: fastio-jni-arm64
        path: output/fastio.so
        retention-days: 90
