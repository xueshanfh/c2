name: Build ARM64 FastIO

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU for ARM64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build ARM64 FastIO
      run: |
        echo "Building ARM64 FastIO extension..."
        
        # Build the Docker image
        docker buildx build --platform linux/arm64 \
          -f Dockerfile.arm64 \
          -t arm64-fastio:latest \
          --load \
          .
        
        # Create output directory
        mkdir -p output
        
        # Extract the binary from the container
        docker run --rm --platform linux/arm64 \
          -v $PWD/output:/output \
          arm64-fastio:latest \
          cp /build/fastio.so /output/
        
        # Verify the build
        echo "Build verification:"
        ls -la output/
        file output/fastio.so || echo "File command not available"
    
    - name: Upload ARM64 binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: fastio-arm64-binary
        path: output/fastio.so
        retention-days: 90
    
    - name: Create release asset (on release)
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: output/fastio.so
        asset_name: fastio-arm64.so
        asset_content_type: application/octet-stream
