name: Build ARM64 FastIO (Simple)
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU for ARM64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    
    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    
    - name: Install ARM64 Lua headers
      run: |
        # Download and set up ARM64 Lua development files
        wget http://ports.ubuntu.com/pool/main/l/lua5.4/lua5.4-dev_5.4.4-1ubuntu1_arm64.deb
        sudo dpkg -x lua5.4-dev_5.4.4-1ubuntu1_arm64.deb /tmp/lua-arm64
        
        # Create symlinks for easy access
        sudo mkdir -p /usr/aarch64-linux-gnu/include
        sudo cp -r /tmp/lua-arm64/usr/include/lua5.4/* /usr/aarch64-linux-gnu/include/
    
    - name: Cross-compile ARM64 FastIO
      run: |
        echo "Cross-compiling for ARM64..."
        
        # ARM64 cross-compilation
        aarch64-linux-gnu-gcc -O3 -fPIC -Wall -Wextra -std=c99 \
          -DLUA_COMPAT_5_3 -DLUA_USE_LINUX \
          -march=armv8-a -mtune=cortex-a72 \
          -DNDEBUG -fstack-protector-strong \
          -D_FORTIFY_SOURCE=2 -fvisibility=hidden \
          -I/usr/aarch64-linux-gnu/include \
          -c fastio_read_only.c -o fastio.o
        
        aarch64-linux-gnu-gcc -shared -fPIC \
          -Wl,-soname,fastio.so \
          -Wl,--as-needed -Wl,-z,relro,-z,now \
          -Wl,--strip-all \
          -o fastio.so fastio.o -lm -ldl
        
        # Verify ARM64 binary
        file fastio.so
        ls -la fastio.so
    
    - name: Upload ARM64 binary
      uses: actions/upload-artifact@v4
      with:
        name: fastio-arm64-simple
        path: fastio.so
        retention-days: 90
